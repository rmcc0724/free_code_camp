/*
Write a callback function that increments the global variable count every time the store receives an action, and pass this function in to the store.subscribe() method. You'll see that store.dispatch() is called three times in a row, each time directly passing in an action object. Watch the console output between the action dispatches to see the updates take place.
*/

//Create a const named ADD
const ADD = 'ADD';

//Create a reducer with default state and case statements
const reducer = (state = 0, action) => {
  switch(action.type) {
    case ADD:
      return state + 1;
    default:
      return state;
  }
};

//Create a store with the reducer passed as an argument
const store = Redux.createStore(reducer);

// Set global count variable:
let count = 0;

// Declare a function counter that increases by 1 every time its called
const counter = () => count+=1;

//Call the store.subscribe function passing counter as an arg
store.subscribe(counter);

store.dispatch({type: ADD});
console.log(count);
store.dispatch({type: ADD});
console.log(count);
store.dispatch({type: ADD});
