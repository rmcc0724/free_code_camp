/*
Redux: Register a Store Listener

Another method you have access to on the Redux store object is store.subscribe(). This allows you to subscribe listener functions to the store, which are called whenever an action is dispatched against the store. One simple use for this method is to subscribe a function to your store that simply logs a message every time an action is received and the store is updated.

*/

//Create a const named ADD
const ADD = 'ADD';

//Create a reducer with default state and case statements
const reducer = (state = 0, action) => {
  switch(action.type) {
    case ADD:
      return state + 1;
    default:
      return state;
  }
};

//Create a store with the reducer passed as an argument
const store = Redux.createStore(reducer);

// Set global count variable:
let count = 0;

// Declare a call back function that increases the counter by 1 every time its called
const counter = () => count+=1;

//Call the store.subscribe function while passing counter as a call back function arg
store.subscribe(counter);

store.dispatch({type: ADD});
console.log(count);
store.dispatch({type: ADD});
console.log(count);
store.dispatch({type: ADD});
